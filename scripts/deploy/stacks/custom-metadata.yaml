---
AWSTemplateFormatVersion: '2010-09-09'
Description: SPID Hub - Custom Metadata Listener Rule

Parameters:

  CustomMetadataUrl:
    Description: Metadata url
    Type: String

  ListenerArn:
    Description: The ARN of the ALB Listener
    Type: String


Resources:

  CustomMetadataInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt 
        - CustomMetadataLambda
        - Arn
      Action: 'lambda:InvokeFunction'
      Principal: elasticloadbalancing.amazonaws.com

  CustomMetadataLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
            exports.lambda_handler = async (event) => {
              const response = {
                "statusCode": 200,
                "statusDescription": "200 OK",
                "isBase64Encoded": False,
                "headers": {
                  "Content-Type": "text/xml; charset=utf-8"
                }
              }

              response.body = "<xml>Hello world</xml>"
              return response
            };
      Handler: index.lambda_handler
      Runtime: nodejs16.x
      Role: !GetAtt CustomMetadataExecutionRole.Arn

  CustomMetadataExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /     
      Policies:
        - PolicyName: CustomMetadataPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource:
                  - !Sub 'arn:aws:logs:*:${AWS::AccountId}:log-group:/aws/lambda/*'
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub 'arn:aws:logs:*:${AWS::AccountId}:log-group:/aws/lambda/*:*'

  LambdaTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: false
      TargetType: lambda
      Targets: 
        - Id: !GetAtt CustomMetadataLambda.Arn

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        ForwardConfig:
          TargetGroups: 
            - TargetGroupArn: !Ref LambdaTargetGroup
              Weight: 10
      Conditions:
      - Field: path-pattern
        PathPatternConfig:
          Values:
          - '/metadata'
      ListenerArn:
        Ref: ListenerArn
      Priority: 5
