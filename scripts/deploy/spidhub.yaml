---
AWSTemplateFormatVersion: '2010-09-09'
Description: SPID Hub

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Global
      Parameters:
      - Project
      - Environment
      - DomainName
      - HostedZoneId
      - Storage
    - Label:
        default: Network
      Parameters:
      - FrontEndVpcId
      - BackEndVpcId
      - FrontEndSubnets
      - BackEndSubnets
      # - CIDRVPC
      # - CIDRBackEndA
      # - CIDRBackEndB
      # - CIDRBackEndC
      # - CIDRFrontEndA
      # - CIDRFrontEndB
      # - CIDRFrontEndC
    - Label:
        default: Hub Login
      Parameters:
      - HubLoginVersion
      - HubLoginConfigVersion
      - HubLoginSecrets
    - Label:
        default: SPID SAML Check
      Parameters:
      - SpidSamlCheckVersion
      - SpidSamlCheckConfigVersion
    ParameterLabels:
      FrontEndVpcId:
        default: Vpc Id
      BackEndVpcId:
        default: Vpc Id
      FrontEndSubnets:
        default: Comma separated list of front-end subnets ids
      BackEndSubnets:
        default: Comma separated list of back-end subnets ids
      # CIDRVPC:
      #   default: VPC CIDR
      # CIDRBackEndA:
      #   default: BackEnd Subnet A CIDR
      # CIDRBackEndB:
      #   default: BackEnd Subnet B CIDR
      # CIDRBackEndC:
      #   default: BackEnd Subnet C CIDR
      # CIDRFrontEndA:
      #   default: FrontEnd Subnet A CIDR
      # CIDRFrontEndB:
      #   default: FrontEnd Subnet B CIDR
      # CIDRFrontEndC:
      #   default: FrontEnd Subnet C CIDR
      DomainName:
        default: Domain Name
      HostedZoneId:
        default: Hosted Zone Id
      HubLoginVersion:
        default: Version
      HubLoginConfigVersion:
        default: Config Version
      HubLoginSecrets:
        default: Secrets
      SpidSamlCheckVersion:
        default: Version
      SpidSamlCheckConfigVersion:
        default: Config Version


Conditions:

  IsProd:
    Fn::Equals:
    - Ref: Environment
    - prod

  IsNotProd:
    Fn::Not:
    - Condition: IsProd


Parameters:

  Project:
    Description: The project
    MinLength: 3
    Type: String

  Environment:
    Description: The enviroment
    MinLength: 3
    Type: String
    AllowedValues:
    - dev
    - uat
    - prod

  Storage:
    AllowedPattern: ^((?!xn--)(?!.*-s3alias)[a-z0-9][a-z0-9-]{1,61}[a-z0-9])$
    Description: The S3 bucked used as storage
    Type: String
  
  BackEndVpcId:
    Type: String
    Description: The id of the deployment VPC
  
  FrontEndVpcId:
    Type: String
    Description: The id of the deployment VPC
  
  FrontEndSubnets:
    Type: String
    Description: FrontEnd subnets ids
  
  BackEndSubnets:
    Type: String
    Description: BackEnd subnets ids
  
  InternalNlbIps:
    Description: The list of ips of the internal network load balancer
    Default: '10.2.63.200,10.2.127.200,10.2.191.200'
    Type: String
  

  # CIDRVPC:
  #   AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
  #   ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  #   Description: CIDR block for VPC
  #   Type: String

  # CIDRDataA:
  #   AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
  #   ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  #   Description: CIDR block for subnet Data A
  #   Type: String

  # CIDRDataB:
  #   AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
  #   ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  #   Description: CIDR block for subnet Data B
  #   Type: String

  # CIDRDataC:
  #   AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
  #   ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  #   Description: CIDR block for subnet Data C
  #   Type: String

  # CIDRBackEndA:
  #   AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
  #   ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  #   Description: CIDR block for subnet BackEnd A
  #   Type: String

  # CIDRBackEndB:
  #   AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
  #   ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  #   Description: CIDR block for subnet BackEnd B
  #   Type: String

  # CIDRBackEndC:
  #   AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
  #   ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  #   Description: CIDR block for subnet BackEnd C
  #   Type: String

  # CIDRFrontEndA:
  #   AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
  #   ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  #   Description: CIDR block for subnet FrontEnd A
  #   Type: String

  # CIDRFrontEndB:
  #   AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
  #   ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  #   Description: CIDR block for subnet FrontEnd B
  #   Type: String

  # CIDRFrontEndC:
  #   AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
  #   ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  #   Description: CIDR block for subnet FrontEnd C
  #   Type: String

  DomainName:
    Description: The Domain Name
    Type: String
    AllowedPattern: ^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$

  HostedZoneId:
    Description: The ID of the Route 53 Hosted Zone
    Type: AWS::Route53::HostedZone::Id

  HubLoginVersion:
    Description: The image version to use
    Type: String

  HubLoginConfigVersion:
    AllowedPattern: ^v[0-9\.]+$
    Description: The configuration version to get from the storage
    Type: String

  HubLoginSecrets:
    Description: The secret name to get from the SecretManager
    Type: String

  SpidSamlCheckVersion:
    Description: The image version to use
    Type: String

  SpidSamlCheckConfigVersion:
    AllowedPattern: ^v[0-9\.]+$
    Description: The configuration version to get from the storage
    Type: String


Resources:

  # Network:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     Parameters:
  #       Project:
  #         Ref: Project
  #       Environment:
  #         Ref: Environment
  #       CIDRVPC:
  #         Ref: CIDRVPC
  #       CIDRDataA:
  #         Ref: CIDRDataA
  #       CIDRDataB:
  #         Ref: CIDRDataB
  #       CIDRDataC:
  #         Ref: CIDRDataC
  #       CIDRBackEndA:
  #         Ref: CIDRBackEndA
  #       CIDRBackEndB:
  #         Ref: CIDRBackEndB
  #       CIDRBackEndC:
  #         Ref: CIDRBackEndC
  #       CIDRFrontEndA:
  #         Ref: CIDRFrontEndA
  #       CIDRFrontEndB:
  #         Ref: CIDRFrontEndB
  #       CIDRFrontEndC:
  #         Ref: CIDRFrontEndC
  #     TemplateURL: ./stacks/network.yaml

  Orchestrator:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Project: !Ref Project
        Environment: !Ref Environment
        DomainName: !Ref DomainName
        HostedZoneId: !Ref HostedZoneId
        InternalVpcId: !Ref BackEndVpcId
        InternalSubnets: !Ref BackEndSubnets
        InternalNlbIps: !Ref InternalNlbIps
        ExternalVpcId: !Ref FrontEndVpcId
        ExternalSubnets: !Ref FrontEndSubnets
      TemplateURL: ./stacks/orchestrator.yaml

  Cache:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Project: !Ref Project
        Environment: !Ref Environment
        VpcId: !Ref BackEndVpcId
        Subnets: !Ref BackEndSubnets
      TemplateURL: ./stacks/cache.yaml

  HubLogin:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Project: !Ref Project
        Environment: !Ref Environment
        Storage: !Ref Storage
        Version: !Ref HubLoginVersion
        ConfigVersion: !Ref HubLoginConfigVersion
        Secrets: !Ref HubLoginSecrets
        DomainName: !Ref DomainName
        VpcId: !Ref BackEndVpcId
          #Fn::GetAtt:
          #- Network
          #- Outputs.VPCId
        Subnets: !Ref BackEndSubnets
          #Fn::GetAtt:
          #- Network
          #- Outputs.BackEndSubnets
        Cluster:
          Fn::GetAtt:
          - Orchestrator
          - Outputs.Cluster
        ListenerArn:
          Fn::GetAtt:
          - Orchestrator
          - Outputs.ListenerHttps
        IngressSecurityGroup:
          Fn::GetAtt:
          - Orchestrator
          - Outputs.AlbSecurityGroup
        RedisSecurityGroup:
          Fn::GetAtt:
          - Cache
          - Outputs.SecurityGroup
        RedisEndpoint:
          Fn::GetAtt:
          - Cache
          - Outputs.Endpoint
        RedisPort:
          Fn::GetAtt:
          - Cache
          - Outputs.Port
        RedisSecret:
          Fn::GetAtt:
          - Cache
          - Outputs.AuthSecret
      TemplateURL: ./stacks/hub-login.yaml

  SpidSamlCheck:
    Type: AWS::CloudFormation::Stack
    Condition: IsNotProd
    DependsOn:
    - HubLogin
    Properties:
      Parameters:
        Project: !Ref Project
        Environment: !Ref Environment
        Version: !Ref SpidSamlCheckVersion
        Storage: !Ref Storage
        ConfigVersion: !Ref SpidSamlCheckConfigVersion
        DomainName: !Ref DomainName
        VpcId: !Ref BackEndVpcId
          #Fn::GetAtt:
          #- Network
          #- Outputs.VPCId
        Subnets: !Ref BackEndSubnets
          #Fn::GetAtt:
          #- Network
          #- Outputs.BackEndSubnets
        Cluster:
          Fn::GetAtt:
          - Orchestrator
          - Outputs.Cluster
        ListenerArn:
          Fn::GetAtt:
          - Orchestrator
          - Outputs.ListenerHttps
        IngressSecurityGroup:
          Fn::GetAtt:
          - Orchestrator
          - Outputs.AlbSecurityGroup
      TemplateURL: ./stacks/spid-saml-check.yaml

  WellKnown:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Secrets:
          Ref: HubLoginSecrets
        ListenerArn:
          Fn::GetAtt:
          - Orchestrator
          - Outputs.ListenerHttps
      TemplateURL: ./stacks/well-known.yaml
